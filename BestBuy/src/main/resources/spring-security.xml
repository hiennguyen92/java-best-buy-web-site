<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth" 
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd
	http://www.springframework.org/schema/security/oauth
	http://www.springframework.org/schema/security/spring-security-oauth-1.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd">
 
    <import resource="hibernate.xml"></import>
    
    <http auto-config="true" xmlns="http://www.springframework.org/schema/security">
        <intercept-url pattern="/Admin/*" access="ROLE_ADMIN" />
        <intercept-url pattern="/WishList" access="ROLE_ADMIN,ROLE_USER" />
        <intercept-url pattern="/Order" access="ROLE_ADMIN,ROLE_USER" />
        <intercept-url pattern="/OrderHistory" access="ROLE_ADMIN,ROLE_USER" />
        <intercept-url pattern="/Service/request_token_authorized.jsp" access="ROLE_USER" />
        <intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/Service/download/*" access="ROLE_ADMIN" />

        <form-login login-page="/Login" default-target-url="/Login" always-use-default-target="true"
                    authentication-failure-url="/Login" />
        <logout logout-success-url="/Home" />
    </http>
    
   
 
    <authentication-manager alias="authenticationManager" xmlns="http://www.springframework.org/schema/security">
        <authentication-provider>
            <jdbc-user-service  id="userDetailsService" data-source-ref="databaseConnect"
 
                                users-by-username-query="
		      select Username,Password, Enable 
		      from Account where Username=?" 
 
                                authorities-by-username-query="
		      select u.Username, ur.Authority from Account u, UserRoles ur 
		      where u.Username = ur.Username and u.Username =?  " 
 
            />
        </authentication-provider>
    </authentication-manager>
    
    <oauth:provider consumer-details-service-ref="consumerDetails"
                    token-services-ref="tokenServices"
                    request-token-url="/Service/oauth/request_token"
                    authenticate-token-url="/Service/oauth/authorize"
                    user-approval-url="/Service/oauth/confirm_access"
                    access-granted-url="/Service/request_token_authorized.jsp"
                    access-token-url="/Service/oauth/access_token"
                    require10a="false"/>

    <oauth:consumer-details-service id="consumerDetails">
        <oauth:consumer name="Tonr.com" key="tonr-consumer-key" secret="SHHHHH!!!!!!!!!!" resourceName="Your Photos"
                    resourceDescription="Your photos that you have uploaded to sparklr.com."/>
    </oauth:consumer-details-service>

    <oauth:token-services id="tokenServices"/>
</beans>